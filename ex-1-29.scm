;; Exercise 1.29
(load "./ch-1.scm")

;; (define (integral-simpson f a b n)
;;   (define h (/ (- b a) n))
;;   (define (iter k)
;;     (define (y-k) (f (+ a (* k h))))
;;     (cond ((< k 0) 0)
;;           ((or (= k 0) (= k n)) (+ (* 1.0 (y-k)) (iter (- k 1))))
;;           ((odd? k) (+ (* 4.0 (y-k)) (iter (- k 1))))
;;           (else (+ (* 2.0 (y-k)) (iter (- k 1))))))
;;   (if (even? n)
;;     (* (/ h 3) (iter n))
;;     #f))

(define (integral-simpson f a b n)
  (define h (/ (- b a) n))
  (define (inc x) (+ x 1))
  (define (y k) (f (+ a (* k h))))
  (define (term k)
    (* (cond ((odd? k) 4.0)
             ((or (= k 0) (= k n)) 1.0)
             ((even? k) 2.0))
       (y k)))
  (* (/ h 3) (sum term 0 inc n)))
